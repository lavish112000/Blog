#!/bin/bash

# üîí Pre-commit Hook
# This script runs before each commit to ensure code quality

echo "üîí Running pre-commit checks..."

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "‚ùå Not in a git repository"
    exit 1
fi

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

# Check if there are any staged files
if [ -z "$STAGED_FILES" ]; then
    echo "‚úÖ No staged files to check"
    exit 0
fi

echo "üìÅ Checking staged files..."

# Flag to track if any checks fail
CHECKS_FAILED=0

# Check JavaScript files
JS_FILES=$(echo "$STAGED_FILES" | grep '\.js$' || true)
if [ ! -z "$JS_FILES" ]; then
    echo "üîç Linting JavaScript files..."
    
    # Run ESLint on staged JS files
    if ! npm run lint -- $JS_FILES; then
        echo "‚ùå ESLint failed. Please fix the issues before committing."
        CHECKS_FAILED=1
    fi
fi

# Check formatting on staged files
echo "üé® Checking code formatting..."
UNFORMATTED_FILES=""

for file in $STAGED_FILES; do
    if [[ $file =~ \.(js|css|html)$ ]]; then
        if ! npx prettier --check "$file" > /dev/null 2>&1; then
            UNFORMATTED_FILES="$UNFORMATTED_FILES $file"
        fi
    fi
done

if [ ! -z "$UNFORMATTED_FILES" ]; then
    echo "‚ùå The following files are not properly formatted:"
    echo "$UNFORMATTED_FILES"
    echo "Run 'npm run format' to fix formatting issues."
    CHECKS_FAILED=1
fi

# Check for console.log statements in production code
CONSOLE_FILES=$(echo "$JS_FILES" | xargs grep -l "console\." 2>/dev/null || true)
if [ ! -z "$CONSOLE_FILES" ]; then
    echo "‚ö†Ô∏è  Warning: console statements found in:"
    echo "$CONSOLE_FILES"
    echo "Consider removing console statements before committing to production."
    # Don't fail the commit for console statements, just warn
fi

# Check for TODO/FIXME comments in staged files
TODO_COMMENTS=$(echo "$STAGED_FILES" | xargs grep -n "TODO\|FIXME" 2>/dev/null || true)
if [ ! -z "$TODO_COMMENTS" ]; then
    echo "üìù TODO/FIXME comments found:"
    echo "$TODO_COMMENTS"
    echo "Consider addressing these before committing."
fi

# Check for large files (>1MB)
for file in $STAGED_FILES; do
    if [ -f "$file" ]; then
        SIZE=$(stat -c%s "$file" 2>/dev/null || stat -f%z "$file" 2>/dev/null)
        if [ "$SIZE" -gt 1048576 ]; then
            echo "‚ö†Ô∏è  Large file detected: $file ($(($SIZE / 1024))KB)"
            echo "Consider optimizing or moving to LFS."
        fi
    fi
done

# Final result
if [ $CHECKS_FAILED -eq 1 ]; then
    echo ""
    echo "‚ùå Pre-commit checks failed. Please fix the issues and try again."
    echo "üí° Tip: You can run 'npm run lint:fix' and 'npm run format' to auto-fix many issues."
    exit 1
else
    echo ""
    echo "‚úÖ All pre-commit checks passed!"
    exit 0
fi